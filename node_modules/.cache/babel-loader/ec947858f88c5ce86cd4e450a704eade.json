{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ritik.singh/Work/Assessment/tollgate_player_app/src/components/AddPlayer.jsx\";\nimport React, { Component } from \"react\";\nimport { PlayerContext } from \"../data/PlayerContext\";\nimport axios from \"axios\";\nexport default class AddPlayer extends Component {\n  //  declare state with required properties\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      country: \"\",\n      matchesPlayer: \"\"\n    };\n  }\n\n  submitHandler(e) {\n    e.preventDefault(); // declare and initialise players ,setPlayers from context\n    // use axios.post to send new player data to json api\n    // and store the same to context also using setPlayer\n    // reset the text fields and show acknowledgement\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          for: \"name\",\n          children: \"Player Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          value: this.state.name,\n          onChange: e => this.setState({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n          for: \"country\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"country\",\n          value: this.state.country,\n          onChange: e => this.setState({\n            country: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n          for: \"name\",\n          children: \"Player Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.name,\n          onChange: e => this.setState({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nAddPlayer.contextType = PlayerContext;","map":{"version":3,"sources":["/home/ritik.singh/Work/Assessment/tollgate_player_app/src/components/AddPlayer.jsx"],"names":["React","Component","PlayerContext","axios","AddPlayer","constructor","state","name","country","matchesPlayer","submitHandler","e","preventDefault","render","setState","target","value","contextType"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC/C;AACAI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,aAAa,EAAE;AAHJ,KAAb;AAKD;;AAEDC,EAAAA,aAAa,CAACC,CAAD,EAAI;AACfA,IAAAA,CAAC,CAACC,cAAF,GADe,CAGf;AACA;AACA;AAEA;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,gCACE;AAAO,UAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,MADL;AAEE,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,IAFpB;AAGE,UAAA,QAAQ,EAAGI,CAAD,IAAO,KAAKG,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAEI,CAAC,CAACI,MAAF,CAASC;AAAjB,WAAd;AAHnB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAO,UAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AACE,UAAA,EAAE,EAAC,SADL;AAEE,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWE,OAFpB;AAGE,UAAA,QAAQ,EAAGG,CAAD,IAAO,KAAKG,QAAL,CAAc;AAAEN,YAAAA,OAAO,EAAEG,CAAC,CAACI,MAAF,CAASC;AAApB,WAAd;AAHnB;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE;AAAO,UAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE;AACE,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,IADpB;AAEE,UAAA,QAAQ,EAAGI,CAAD,IAAO,KAAKG,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAEI,CAAC,CAACI,MAAF,CAASC;AAAjB,WAAd;AAFnB;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AA7C8C;AA+CjDZ,SAAS,CAACa,WAAV,GAAwBf,aAAxB","sourcesContent":["import React, { Component } from \"react\";\nimport { PlayerContext } from \"../data/PlayerContext\";\nimport axios from \"axios\";\nexport default class AddPlayer extends Component {\n  //  declare state with required properties\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      country: \"\",\n      matchesPlayer: \"\",\n    };\n  }\n\n  submitHandler(e) {\n    e.preventDefault();\n\n    // declare and initialise players ,setPlayers from context\n    // use axios.post to send new player data to json api\n    // and store the same to context also using setPlayer\n\n    // reset the text fields and show acknowledgement\n  }\n  render() {\n    return (\n      <div>\n        <form>\n          <lable for=\"name\">Player Name</lable>\n          <input\n            id=\"name\"\n            value={this.state.name}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n          <lable for=\"country\">Country</lable>\n          <input\n            id=\"country\"\n            value={this.state.country}\n            onChange={(e) => this.setState({ country: e.target.value })}\n          />\n          <lable for=\"name\">Player Name</lable>\n          <input\n            value={this.state.name}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n        </form>\n        {/* display form to accept name,country and matchesPlayed  of a player */}\n      </div>\n    );\n  }\n}\nAddPlayer.contextType = PlayerContext;\n"]},"metadata":{},"sourceType":"module"}
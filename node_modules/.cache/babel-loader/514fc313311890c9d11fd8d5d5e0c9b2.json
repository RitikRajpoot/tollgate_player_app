{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"/home/ritik.singh/Work/Assessment/tollgate_player_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/ritik.singh/Work/Assessment/tollgate_player_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/home/ritik.singh/Work/Assessment/tollgate_player_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ritik.singh/Work/Assessment/tollgate_player_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ritik.singh/Work/Assessment/tollgate_player_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ritik.singh/Work/Assessment/tollgate_player_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{PlayerContext}from\"../data/PlayerContext\";// import axios from \"axios\";\nvar AddPlayer=/*#__PURE__*/function(_Component){_inherits(AddPlayer,_Component);var _super=_createSuper(AddPlayer);//  declare state with required properties\nfunction AddPlayer(){var _this;_classCallCheck(this,AddPlayer);_this=_super.call(this);_this.state={name:\"\",country:\"\",matchesPlayed:\"\"};return _this;}_createClass(AddPlayer,[{key:\"submitHandler\",value:function submitHandler(e){e.preventDefault();var _this$context=_slicedToArray(this.context,2),players=_this$context[0],setPlayers=_this$context[1];var newPlayer={name:this.state.name,country:this.state.country,matchesPlayed:this.state.matchesPlayed};// console.log(newPlayer);\nthis.setState({name:\"\",country:\"\",matchesPlayed:\"\"});alert(\"Added Player Successfully\");fetch(\"http://localhost:3333/players\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newPlayer)}).then(function(res){return res.json();}).then(function(data){setPlayers([].concat(_toConsumableArray(players),[data]));});// declare and initialise players ,setPlayers from context\n// use axios.post to send new player data to json api\n// and store the same to context also using setPlayer\n// reset the text fields and show acknowledgement\n}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){_this2.submitHandler(e);},style:{width:\"80%\",margin:\"40px\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"playername\",children:\"Player Name\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control input-field\",id:\"name\",value:this.state.name,onChange:function onChange(e){return _this2.setState({name:e.target.value});},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"country\",children:\"Country\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control input-field\",id:\"country\",value:this.state.country,onChange:function onChange(e){return _this2.setState({country:e.target.value});},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Matches Played\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control input-field\",value:this.state.matchesPlayed,onChange:function onChange(e){return _this2.setState({matchesPlayed:e.target.value});},required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Add Player\"})]})});}}]);return AddPlayer;}(Component);AddPlayer.contextType=PlayerContext;export{AddPlayer as default};AddPlayer.contextType=PlayerContext;","map":{"version":3,"sources":["/home/ritik.singh/Work/Assessment/tollgate_player_app/src/components/AddPlayer.jsx"],"names":["React","Component","PlayerContext","AddPlayer","state","name","country","matchesPlayed","e","preventDefault","context","players","setPlayers","newPlayer","setState","alert","fetch","method","headers","body","JSON","stringify","then","res","json","data","submitHandler","width","margin","target","value","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { PlayerContext } from \"../data/PlayerContext\";\n// import axios from \"axios\";\nexport default class AddPlayer extends Component {\n  //  declare state with required properties\n  static contextType = PlayerContext;\n\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      country: \"\",\n      matchesPlayed: \"\",\n    };\n  }\n\n  submitHandler(e) {\n    e.preventDefault();\n    const [players, setPlayers] = this.context;\n\n    const newPlayer = {\n      name: this.state.name,\n      country: this.state.country,\n      matchesPlayed: this.state.matchesPlayed,\n    };\n\n    // console.log(newPlayer);\n    this.setState({ name: \"\", country: \"\", matchesPlayed: \"\" });\n    alert(\"Added Player Successfully\");\n    fetch(\"http://localhost:3333/players\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPlayer),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setPlayers([...players, data]);\n      });\n    // declare and initialise players ,setPlayers from context\n    // use axios.post to send new player data to json api\n    // and store the same to context also using setPlayer\n\n    // reset the text fields and show acknowledgement\n  }\n  render() {\n    return (\n      <div>\n        <form\n          onSubmit={(e) => {\n            this.submitHandler(e);\n          }}\n          style={{ width: \"80%\", margin: \"40px\" }}\n        >\n          <div className=\"form-group\">\n            <label htmlFor=\"playername\">Player Name</label>\n            <input\n              className=\"form-control input-field\"\n              id=\"name\"\n              value={this.state.name}\n              onChange={(e) => this.setState({ name: e.target.value })}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"country\">Country</label>\n            <input\n              className=\"form-control input-field\"\n              id=\"country\"\n              value={this.state.country}\n              onChange={(e) => this.setState({ country: e.target.value })}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Matches Played</label>\n            <input\n              className=\"form-control input-field\"\n              value={this.state.matchesPlayed}\n              onChange={(e) => this.setState({ matchesPlayed: e.target.value })}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Add Player\n          </button>\n        </form>\n        {/* display form to accept name,country and matchesPlayed  of a player */}\n      </div>\n    );\n  }\n}\nAddPlayer.contextType = PlayerContext;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ritik.singh/Work/Assessment/tollgate_player_app/src/components/AddPlayer.jsx\";\nimport React, { Component, useContext } from \"react\";\nimport { PlayerContext } from \"../data/PlayerContext\";\nimport axios from \"axios\";\nexport default class AddPlayer extends Component {\n  //  declare state with required properties\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      country: \"\",\n      matchesPlayer: \"\"\n    };\n  }\n\n  submitHandler(e) {\n    e.preventDefault();\n    const players = PlayerContext;\n    const newPlayer = {\n      name: this.name,\n      country: this.country,\n      matchesPlayed: this.matchesPlayed\n    };\n    fetch(\"http://localhost:3333/players\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPlayer)\n    }); // declare and initialise players ,setPlayers from context\n    // use axios.post to send new player data to json api\n    // and store the same to context also using setPlayer\n    // reset the text fields and show acknowledgement\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          this.submitHandler(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"playername\",\n            children: \"Player Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control input-field\",\n            id: \"name\",\n            value: this.state.name,\n            onChange: e => this.setState({\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            for: \"country\",\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control input-field\",\n            id: \"country\",\n            value: this.state.country,\n            onChange: e => this.setState({\n              country: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            for: \"name\",\n            children: \"Matches Played\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control input-field\",\n            value: this.state.matchesPlayer,\n            onChange: e => this.setState({\n              matchesPlayer: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Add Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nAddPlayer.contextType = PlayerContext;","map":{"version":3,"sources":["/home/ritik.singh/Work/Assessment/tollgate_player_app/src/components/AddPlayer.jsx"],"names":["React","Component","useContext","PlayerContext","axios","AddPlayer","constructor","state","name","country","matchesPlayer","submitHandler","e","preventDefault","players","newPlayer","matchesPlayed","fetch","method","headers","body","JSON","stringify","render","setState","target","value","contextType"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from \"react\";\nimport { PlayerContext } from \"../data/PlayerContext\";\nimport axios from \"axios\";\nexport default class AddPlayer extends Component {\n  //  declare state with required properties\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      country: \"\",\n      matchesPlayer: \"\",\n    };\n  }\n\n  submitHandler(e) {\n    e.preventDefault();\n\n    const players = PlayerContext;\n\n    const newPlayer = {\n      name: this.name,\n      country: this.country,\n      matchesPlayed: this.matchesPlayed,\n    };\n\n    fetch(\"http://localhost:3333/players\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPlayer),\n    });\n    // declare and initialise players ,setPlayers from context\n    // use axios.post to send new player data to json api\n    // and store the same to context also using setPlayer\n\n    // reset the text fields and show acknowledgement\n  }\n  render() {\n    return (\n      <div>\n        <form\n          onSubmit={(e) => {\n            this.submitHandler(e);\n          }}\n        >\n          <div class=\"form-group\">\n            <lable htmlFor=\"playername\">Player Name</lable>\n            <input\n              className=\"form-control input-field\"\n              id=\"name\"\n              value={this.state.name}\n              onChange={(e) => this.setState({ name: e.target.value })}\n            />\n          </div>\n          <div class=\"form-group\">\n            <lable for=\"country\">Country</lable>\n            <input\n              className=\"form-control input-field\"\n              id=\"country\"\n              value={this.state.country}\n              onChange={(e) => this.setState({ country: e.target.value })}\n            />\n          </div>\n          <div class=\"form-group\">\n            <lable for=\"name\">Matches Played</lable>\n            <input\n              className=\"form-control input-field\"\n              value={this.state.matchesPlayer}\n              onChange={(e) => this.setState({ matchesPlayer: e.target.value })}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Add Player\n          </button>\n        </form>\n        {/* display form to accept name,country and matchesPlayed  of a player */}\n      </div>\n    );\n  }\n}\nAddPlayer.contextType = PlayerContext;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ritik.singh/Work/Assessment/tollgate_player_app/src/components/ShowPlayer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { PlayerContext } from \"../data/PlayerContext\";\nexport default function ShowPlayer() {\n  _s();\n\n  // initialise the player info using useContext hook\n  const [players, setPlayer] = useContext(PlayerContext);\n  useEffect(() => {\n    fetch(\"http://localhost:3333/players\").then(res => {\n      return res.json();\n    }).then(data => {\n      setPlayers(data);\n      return data;\n    }).catch(err => {\n      console.log(\"Unable to fetch\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Player Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Total Match Played\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: players.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: player.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.matchesPlayed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowPlayer, \"JYoTDA50hGaJfu17QQok26T5m18=\");\n\n_c = ShowPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowPlayer\");","map":{"version":3,"sources":["/home/ritik.singh/Work/Assessment/tollgate_player_app/src/components/ShowPlayer.jsx"],"names":["React","useContext","PlayerContext","ShowPlayer","players","setPlayer","useEffect","fetch","then","res","json","data","setPlayers","catch","err","console","log","map","player","id","name","country","matchesPlayed"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC;AACA,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBJ,UAAU,CAACC,aAAD,CAAvC;AAEAI,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdC,MAAAA,UAAU,CAACD,IAAD,CAAV;AACA,aAAOA,IAAP;AACD,KAPH,EAQGE,KARH,CAQUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACGZ,OAAO,CAACa,GAAR,CAAaC,MAAD,iBACX;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA,sBAAiBA,MAAM,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKF,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAKH,MAAM,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA1CuBnB,U;;KAAAA,U","sourcesContent":["import React, { useContext } from \"react\";\nimport { PlayerContext } from \"../data/PlayerContext\";\nexport default function ShowPlayer() {\n  // initialise the player info using useContext hook\n  const [players, setPlayer] = useContext(PlayerContext);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3333/players\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setPlayers(data);\n        return data;\n      })\n      .catch((err) => {\n        console.log(\"Unable to fetch\");\n      });\n  }, []);\n\n  return (\n    <div className=\"data-table\">\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Player Id</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Country</th>\n            <th scope=\"col\">Total Match Played</th>\n          </tr>\n        </thead>\n        <tbody>\n          {players.map((player) => (\n            <tr>\n              <th scope=\"row\">{player.id}</th>\n              <td>{player.name}</td>\n              <td>{player.country}</td>\n              <td>{player.matchesPlayed}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}